#N canvas 398 20 629 475 10;
#N canvas 4 12 452 355 \$0.readany 0;
#X restore 175 146 pd \$0.readany;
#N canvas 323 12 464 897 dynamic.patching 0;
#X obj 119 96 s pd-\$0.readany;
#X msg 101 133 obj 20 20 receive \$1.to.read;
#X obj 101 154 s pd-\$0.readany;
#X obj 83 248 s pd-\$0.readany;
#N canvas 232 268 94 148 seq 0;
#X obj 8 11 inlet;
#X obj 8 34 t a b;
#X obj 8 56 until;
#X obj 8 79 f;
#X obj 8 100 + 1;
#X obj 8 122 outlet;
#X msg 52 55 0;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 6 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 4 0 3 1;
#X connect 6 0 3 1;
#X restore 66 347 pd seq;
#X msg 66 328 \$2;
#X obj 66 305 t a a;
#X msg 147 344 \$1;
#X obj 163 465 * 20;
#X obj 66 490 list append;
#X obj 98 581 s pd-\$0.readany;
#X obj 66 368 list prepend;
#X obj 163 490 + 70;
#X obj 66 514 list append;
#X obj 66 441 list append;
#X obj 66 463 list append;
#X obj 162 416 - 1;
#X obj 162 438 + 1;
#X obj 66 389 t a a;
#X msg 98 411 \$2;
#X obj 31 567 list;
#X msg 119 73 clear;
#X obj 31 612 unpack f f f f f f;
#X obj 80 747 + 1;
#X obj 104 726 + 1;
#X obj 129 703 + 20;
#X obj 154 681 + 20;
#X obj 31 777 pack f f f f f f;
#X obj 31 821 s pd-\$0.readany;
#X obj 31 51 t b a a a a b;
#X obj 66 535 t a a;
#X obj 31 28 list prepend \$0;
#X obj 31 5 inlet;
#X msg 98 558 obj \$5 \$6 throw~ \$1.\$2.ROUTER \, connect 1 \$3 \$4
0;
#X obj 83 178 list append \$2;
#X obj 83 201 list append \$3;
#X msg 31 800 obj \$5 \$6 send \$1.from.read \, connect 1 \$3 \$4 0
;
#X obj 31 634 t a b;
#N canvas 0 0 202 227 check.if.real.or.emu 0;
#X obj 24 45 inlet;
#X obj 26 182 outlet;
#X obj 24 89 s \$0.READ;
#X msg 24 67 whatisit;
#X obj 26 115 r \$0.READ;
#X obj 26 137 route emulation;
#X msg 26 159 8;
#X connect 0 0 3 0;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 1 0;
#X restore 63 658 pd check.if.real.or.emu;
#X msg 83 227 obj 20 40 readanysf~ \$2 \$3 \$4 \$1 \, connect 0 0 1
0;
#X connect 1 0 2 0;
#X connect 4 0 11 0;
#X connect 5 0 4 0;
#X connect 6 0 5 0;
#X connect 6 1 7 0;
#X connect 7 0 11 1;
#X connect 8 0 9 1;
#X connect 8 0 12 0;
#X connect 9 0 13 0;
#X connect 11 0 18 0;
#X connect 12 0 13 1;
#X connect 13 0 30 0;
#X connect 14 0 15 0;
#X connect 15 0 9 0;
#X connect 16 0 14 1;
#X connect 17 0 15 1;
#X connect 18 0 14 0;
#X connect 18 1 19 0;
#X connect 19 0 8 0;
#X connect 19 0 16 0;
#X connect 19 0 17 0;
#X connect 20 0 22 0;
#X connect 21 0 0 0;
#X connect 22 0 37 0;
#X connect 22 1 27 1;
#X connect 22 2 23 0;
#X connect 22 3 24 0;
#X connect 22 4 25 0;
#X connect 22 5 26 0;
#X connect 23 0 27 2;
#X connect 24 0 27 3;
#X connect 25 0 27 4;
#X connect 26 0 27 5;
#X connect 27 0 36 0;
#X connect 29 0 20 0;
#X connect 29 2 6 0;
#X connect 29 3 34 0;
#X connect 29 4 1 0;
#X connect 29 5 21 0;
#X connect 30 0 20 1;
#X connect 30 1 33 0;
#X connect 31 0 29 0;
#X connect 32 0 31 0;
#X connect 33 0 10 0;
#X connect 34 0 35 0;
#X connect 35 0 39 0;
#X connect 36 0 28 0;
#X connect 37 0 27 0;
#X connect 37 1 38 0;
#X connect 38 0 27 2;
#X connect 39 0 3 0;
#X restore 30 146 pd dynamic.patching;
#X obj 30 15 inlet;
#X obj 30 38 route channels;
#X obj 125 62 s \$0.to.read;
#X obj 495 385 r \$0.from.read;
#X obj 15 248 outlet~;
#X obj 75 268 outlet~;
#X obj 135 288 outlet~;
#X obj 195 308 outlet~;
#X obj 255 328 outlet~;
#X obj 315 348 outlet~;
#X obj 375 368 outlet~;
#X obj 435 388 outlet~;
#X obj 495 407 outlet;
#N canvas 291 181 289 403 check_number_of_channels 0;
#X obj 38 75 > 8;
#X obj 38 98 sel 1;
#X msg 38 121 8 channels are the maximum!;
#X obj 38 145 print readmanychsf~;
#X obj 6 6 inlet;
#X obj 6 52 t a a;
#X obj 62 5 loadbang;
#X obj 62 27 \$1;
#X floatatom 107 167 5 0 0 0 - - -;
#X obj 6 190 moses 1;
#X msg 6 216 clear;
#X obj 52 269 moses 9;
#X obj 6 240 s pd-\$0.readany;
#X obj 52 291 outlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 4 0 5 0;
#X connect 5 0 9 0;
#X connect 5 1 0 0;
#X connect 6 0 7 0;
#X connect 7 0 5 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 9 1 11 0;
#X connect 10 0 12 0;
#X connect 11 0 13 0;
#X restore 30 92 pd check_number_of_channels;
#X obj 16 225 catch~ \$0.1.ROUTER;
#X obj 76 245 catch~ \$0.2.ROUTER;
#X obj 136 265 catch~ \$0.3.ROUTER;
#X obj 196 285 catch~ \$0.4.ROUTER;
#X obj 256 305 catch~ \$0.5.ROUTER;
#X obj 316 325 catch~ \$0.6.ROUTER;
#X obj 376 345 catch~ \$0.7.ROUTER;
#X obj 436 365 catch~ \$0.8.ROUTER;
#X text 241 65 readmanychsf~;
#X text 240 76 -------------;
#X text 452 271 Version: 2009-01-01;
#X text 452 287 Author: Roman Haefeli;
#X text 261 191 adds a 'channels' method. the rest is the same.;
#X text 240 94 wrapper around [readanysf~] \, that allows changing
the number of channels dynamically (max = 8).;
#X connect 2 0 3 0;
#X connect 3 0 15 0;
#X connect 3 1 4 0;
#X connect 5 0 14 0;
#X connect 15 0 1 0;
#X connect 16 0 6 0;
#X connect 17 0 7 0;
#X connect 18 0 8 0;
#X connect 19 0 9 0;
#X connect 20 0 10 0;
#X connect 21 0 11 0;
#X connect 22 0 12 0;
#X connect 23 0 13 0;
